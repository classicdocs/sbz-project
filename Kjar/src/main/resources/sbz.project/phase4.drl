package sbz.project

import sbz.project.Application.domain.facts.*;
import java.util.List

global sbz.project.Application.service.action.ActionService actionService;


rule "Stop releasing mixture to launter tun"
    when
        $a: Action(type == "RELEASE_MIXTURE_TO_LAUNTER_TUN");
        $m: Measurer(name == "MEASURER_PRE_LAUNTER_TUN", value == 0)
    then
        delete($a);
        System.out.println("STOP_RELEASING_MIXTURE_TO_LAUNTER_TUN");
        insert(new Action("STOP_RELEASING_MIXTURE_TO_LAUNTER_TUN"));
end

rule "Add water to launter tun"
    when
        $a: Action(type == "STOP_RELEASING_MIXTURE_TO_LAUNTER_TUN");
    then
        delete($a);
        System.out.println("ADD_WATER_TO_LAUNTER_TUN");
        insert(new Action("ADD_WATER_TO_LAUNTER_TUN"));

end

rule "Stop adding water to launter tun"
    when
        $a: Action(type == "ADD_WATER_TO_LAUNTER_TUN");
        $m: Measurer(name == "MEASURER_LAUNTER_TUN_WATER", value == 20)
    then
        delete($a);
        System.out.println("STOP_ADDING_WATER_TO_LAUNTER_TUN");
        insert(new Action("STOP_ADDING_WATER_TO_LAUNTER_TUN"));
end

rule "Release back mixture to pre launter tun and release mixture tu pre launter"
    when
        $a: Action(type == "STOP_ADDING_WATER_TO_LAUNTER_TUN");
    then
       delete($a);
       System.out.println("RELEASE_BACK_MIXTURE_TO_PRE_LAUNTER_TUN");
       insert(new Action("RELEASE_BACK_MIXTURE_TO_PRE_LAUNTER_TUN"));
       System.out.println("RELEASE_MIXTURE_TO_PRE_LAUNTER_TUN_SECOND_TIME");
       insert(new Action("RELEASE_MIXTURE_TO_PRE_LAUNTER_TUN_SECOND_TIME"));
end

rule "Stop releasing mixture to pre launter tun"
    when
        $a: Action(type == "RELEASE_BACK_MIXTURE_TO_PRE_LAUNTER_TUN");
        $m: Measurer(name == "MEASURER_LAUNTER_TUN", value == 0)
    then
        delete($a);
        System.out.println("STOP_RELEASING_BACK_MIXTURE_TO_PRE_LAUNTER_TUN");
        insert(new Action("STOP_RELEASING_BACK_MIXTURE_TO_PRE_LAUNTER_TUN"));
end

rule "Stop releasing mixture to pre launter tun for second time"
    when
        $a: Action(type == "RELEASE_MIXTURE_TO_LAUNTER_TUN_SECOND_TIME");
        $m: Measurer(name == "MEASURER_PRE_LAUNTER_TUN", value == 0)
    then
        delete($a);
        System.out.println("STOP_RELEASING_BACK_MIXTURE_TO_LAUNTER_TUN_SECOND_TIME");
        insert(new Action("STOP_RELEASING_BACK_MIXTURE_TO_LAUNTER_TUN_SECOND_TIME"));
end

rule "Start separating wort from the grains"
    when
        $a: Action(type == "STOP_RELEASING_BACK_MIXTURE_TO_LAUNTER_TUN_SECOND_TIME");
    then
        delete($a);
        System.out.println("START_SEPARATING_WORT_FROM_THE_GRAINS");
        long time = 3000;
        actionService.startAction(time, "START_SEPARATING_WORT_FROM_THE_GRAINS");
end


rule "Stop separating wort from the grains"
    when
        $a: Action(type == "START_SEPARATING_WORT_FROM_THE_GRAINS");
    then
        delete($a);
        System.out.println("STOP_SEPARATING_WORT_FROM_THE_GRAINS");
        insert(new Action("STOP_SEPARATING_WORT_FROM_THE_GRAINS"));
end

rule "Release wort and hops to brew kettle"
    when
        $a: Action(type == "STOP_SEPARATING_WORT_FROM_THE_GRAINS");
    then
        delete($a);
        System.out.println("RELEASE_WORT_TO_BREW_KETTLE");
        insert(new Action("RELEASE_WORT_TO_BREW_KETTLE"));
        System.out.println("ADD_HOPS_TO_BREW_KETTLE");
        insert(new Action("ADD_HOPS_TO_BREW_KETTLE"));
        System.out.println("phase five started!");
end

rule "Stop releasing wort to brew kettle"
    when
        $a: Action(type == "RELEASE_WORT_TO_BREW_KETTLE");
        $m: Measurer(name == "MEASURER_LAUNTER_TAN", value == 0);
    then
        delete($a);
        System.out.println("STOP_RELEASING_WORT_TO_BREW_KETTLE");
        insert(new Action("STOP_RELEASING_WORT_TO_BREW_KETTLE"));
        System.out.println("phase four done!");

end
